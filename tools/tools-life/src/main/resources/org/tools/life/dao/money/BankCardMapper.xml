<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.tools.life.dao.money.BankCardMapper" >
  <sql id="cardColummn">
  			b.id,
			b.bank_name bankName,
			b.type,
			b.bank_num bankNum,
			b.owner,
			b.net_name netName,
			b.net_pwd netPwd,
			b.ud_pwd udPwd,
			b.bill_day billDay,
			b.pay_day payDay,
			b.valid_date validDate,
			b.safe_code safeCode,
			b.credit_aply creditAply,
			b.balance,
			b.fix_credit fixCredit,
			b.available_credit availableCredit
  </sql>
  <!-- 查询卡列表 -->
  <select id="getCardList" resultType="org.tools.life.domain.money.BankCard">
		select
			<include refid="cardColummn"/>
			from
			bank_card  b
			<where>
				<if test='params.bankName!=null and params.bankName!=""'> and b.bank_name like concat('%',#{params.bankName,jdbcType=VARCHAR},'%')</if>
				<if test='params.type!=null and params.type!=""'> and b.type=#{params.type,jdbcType=VARCHAR}</if>
				<if test='params.bankNum!=null and params.bankNum!=""'> and b.bank_num=#{params.bankNum,jdbcType=VARCHAR}</if>
			</where>
		  <if test="sortInfo!=null and sortInfo!=''">order by ${sortInfo}</if>
		  <if test="sortInfo==null or sortInfo==''">order by id</if>
   </select>
   <!-- 插入卡 -->
   <insert id="insertCard">
   	insert into bank_card (bank_name, type, 
      bank_num, owner, net_name, 
      net_pwd, ud_pwd, bill_day, 
      pay_day, valid_date, safe_code, 
      credit_aply, balance, fix_credit, 
      available_credit)
    values (#{bankName,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{bankNum,jdbcType=VARCHAR}, #{owner,jdbcType=VARCHAR}, #{netName,jdbcType=VARCHAR}, 
      #{netPwd,jdbcType=VARCHAR}, #{udPwd,jdbcType=VARCHAR}, #{billDay,jdbcType=INTEGER}, 
      #{payDay,jdbcType=INTEGER}, #{validDate,jdbcType=VARCHAR}, #{safeCode,jdbcType=VARCHAR}, 
      #{creditAply,jdbcType=VARCHAR}, #{balance,jdbcType=DECIMAL}, #{fixCredit,jdbcType=INTEGER}, 
      #{availableCredit,jdbcType=INTEGER})
   </insert>
   <!-- 删除卡 -->
   <delete id="deleteCard" parameterType="java.lang.Integer">
   	delete from bank_card where id=#{id,jdbcType=INTEGER}
   </delete>
   <!-- 根据id获取卡信息 -->
   <select id="getCardById" resultType="org.tools.life.domain.money.BankCard">
		select
			b.id,
			b.bank_name bankName,
			b.type,
			b.bank_num bankNum,
			b.owner,
			b.net_name netName,
			b.net_pwd netPwd,
			b.ud_pwd udPwd,
			b.bill_day billDay,
			b.pay_day payDay,
			b.valid_date validDate,
			b.safe_code safeCode,
			b.credit_aply creditAply,
			b.balance,
			b.fix_credit fixCredit,
			b.available_credit availableCredit
			from
			bank_card  b
		  where b.id=#{id,jdbcType=INTEGER}
   </select>
   <!-- 更新卡信息 -->
   <update id="updateCard" parameterType="org.tools.life.domain.money.BankCard">
   	update bank_card
    set bank_name = #{bankName,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      bank_num = #{bankNum,jdbcType=VARCHAR},
      owner = #{owner,jdbcType=VARCHAR},
      net_name = #{netName,jdbcType=VARCHAR},
      net_pwd = #{netPwd,jdbcType=VARCHAR},
      ud_pwd = #{udPwd,jdbcType=VARCHAR},
      bill_day = #{billDay,jdbcType=INTEGER},
      pay_day = #{payDay,jdbcType=INTEGER},
      valid_date = #{validDate,jdbcType=VARCHAR},
      safe_code = #{safeCode,jdbcType=VARCHAR},
      credit_aply = #{creditAply,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DECIMAL},
      fix_credit = #{fixCredit,jdbcType=INTEGER},
      available_credit = #{availableCredit,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
   </update>
   <!-- 统计财务状况 -->
   <select id="getCardInfoTotal" resultType="org.tools.life.domain.money.BankCard">
	select
		b.type,
		sum(b.balance) balance,
		sum(b.fix_credit) fixCredit,
		sum(b.available_credit) availableCredit
		from
		bank_card  b
		group by b.type
   </select>
   <!-- 获取信用卡列表 -->
   <select id="getCreditCard" resultType="org.tools.life.domain.money.BankCard">
   		select
			<include refid="cardColummn"/>
			from
			bank_card  b
			where b.type=1
   </select>
   
</mapper>